from collections import deque
class Solution:
    def longestSubarray(self, arr, x):
        n = len(arr)
        left = 0
        max_len = 0
        start_idx = 0 
        min_dq, max_dq = deque(), deque()
        
        for right in range(n):
            while min_dq and arr[right] < arr[min_dq[-1]]:
                min_dq.pop()
            min_dq.append(right)
            
            while max_dq and arr[right] > arr[max_dq[-1]]:
                max_dq.pop()
            max_dq.append(right)
            
            while arr[max_dq[0]] - arr[min_dq[0]] > x:
                if min_dq[0] == left:
                    min_dq.popleft()
                if max_dq[0] == left:
                    max_dq.popleft()
                left +=1
                
            if right - left + 1 > max_len:
                max_len = right - left + 1
                start_idx = left 
        return arr[start_idx: start_idx+max_len]
